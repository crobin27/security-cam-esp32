[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D "C:\Users\coler\RobinsonGaming\ESP32 Projects\Trail Cam\build\bootloader\esp-idf\esptool_py" && C:\Users\coler\.espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Users/coler/esp/v5.3.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 "C:/Users/coler/RobinsonGaming/ESP32 Projects/Trail Cam/build/bootloader/bootloader.bin""
Bootloader binary size 0x6880 bytes. 0x780 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Building C object CMakeFiles/trail_cam.elf.dir/project_elf_src_esp32.c.obj
[6/8] Linking CXX executable trail_cam.elf
[7/8] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/coler/RobinsonGaming/ESP32 Projects/Trail Cam/build/trail_cam.bin
[8/8] cmd.exe /C "cd /D "C:\Users\coler\RobinsonGaming\ESP32 Projects\Trail Cam\build\esp-idf\esptool_py" && C:\Users\coler\.espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Users/coler/esp/v5.3.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "C:/Users/coler/RobinsonGaming/ESP32 Projects/Trail Cam/build/partition_table/partition-table.bin" "C:/Users/coler/RobinsonGaming/ESP32 Projects/Trail Cam/build/trail_cam.bin""
trail_cam.bin binary size 0x102330 bytes. Smallest app partition is 0x200000 bytes. 0xfdcd0 bytes (50%) free.
